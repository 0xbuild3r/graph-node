initSidebarItems({"constant":[["BLOCK_HEIGHT",""],["ERROR_POLICY_TYPE",""]],"enum":[["APISchemaError",""],["ErrorPolicy",""]],"fn":[["add_block_height_type","Adds a global `Block_height` type to the schema. The `block` argument accepts values of this type"],["add_builtin_scalar_types","Adds built-in GraphQL scalar types (`Int`, `String` etc.) to the schema."],["add_directives","Add directive definitions for our custom directives"],["add_field_arguments",""],["add_filter_type","Adds a `<type_name>_filter` enum type for the given fields to the schema."],["add_meta_field_type","Adds a global `_Meta_` type to the schema. The `_meta` field accepts values of this type"],["add_order_by_type","Adds a `<type_name>_orderBy` enum type for the given fields to the schema."],["add_order_direction_enum","Adds a global `OrderDirection` type to the schema."],["add_query_type","Adds a root `Query` object type to the schema."],["add_subscription_type","Adds a root `Subscription` object type to the schema."],["add_types_for_interface_types","Adds `*_orderBy` and `*_filter` enum types for the given interfaces to the schema."],["add_types_for_object_types",""],["api_schema","Derives a full-fledged GraphQL API schema from an input schema."],["block_argument",""],["collection_arguments_for_named_type","Generates arguments for collection queries of a named type (e.g. User)."],["field_enum_filter_input_values","Generates `*_filter` input values for the given enum field."],["field_filter_input_values","Generates `*_filter` input values for the given field."],["field_input_values","Generates `*_filter` input values for the given set of fields."],["field_list_filter_input_values","Generates `*_filter` input values for the given list field."],["field_scalar_filter_input_values","Generates `*_filter` input values for the given scalar field."],["input_value","Generates a `*_filter` input value for the given field name, suffix and value type."],["meta_field",""],["query_field_for_fulltext",""],["query_fields_for_type","Generates `Query` fields for the given type name (e.g. `users` and `user`)."],["subgraph_error_argument",""]]});