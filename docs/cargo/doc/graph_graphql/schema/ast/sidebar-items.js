initSidebarItems({"enum":[["FilterOp",""]],"fn":[["get_argument_definitions","Returns the argument definitions for a field of an object type."],["get_derived_from_directive","If the field has a `@derivedFrom(field: \"foo\")` directive, obtain the name of the field (e.g. `\"foo\"`)"],["get_derived_from_field",""],["get_field","Returns the type of a field of an object type."],["get_field_name","Returns the value type for a GraphQL field type."],["get_field_value_type","Returns the value type for a GraphQL field type."],["get_input_object_definitions",""],["get_interface_type_mut","Returns the interface type with the given name."],["get_named_type_definition_mut","Returns a mutable version of the type with the given name."],["get_object_type_directive","Looks up a directive in a object type, if it is provided."],["get_object_type_mut","Returns the object type with the given name."],["get_referenced_entity_type",""],["get_root_query_type_def",""],["get_type_definition_from_field","Returns the type definition that a field type corresponds to."],["get_type_definition_from_type","Returns the type definition for a type."],["get_type_definitions","Returns all type definitions in the schema."],["get_type_description","Returns the description of a type."],["get_type_name","Returns the name of a type."],["is_assignable",""],["is_entity_type",""],["is_entity_type_definition",""],["is_input_type","Returns true if the given type is an input type."],["is_list",""],["is_list_or_non_null_list_field",""],["is_non_null_type",""],["parse_field_as_filter","Split a “name_eq” style name into an attribute (“name”) and a filter op (`Equal`)."],["scalar_value_type",""],["unpack_type",""],["validate_entity",""]]});